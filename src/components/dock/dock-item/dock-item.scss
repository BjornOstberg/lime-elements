@use '../../../style/mixins';
@use '../../../style/functions';
@use '../../../style/internal/variables';

.dock-item {
    --step-background: var(
        --dock-item-background-color,
        rgb(var(--contrast-600))
    );
    --step-background--selected: var(
        --dock-item-background-color--selected,
        var(--mdc-theme-primary)
    );
    --step-background--passed: var(
        --dock-item-background-color--passed,
        var(--step-background--selected)
    );
    --step-text: var(
        --dock-item-text-color,
        rgb(var(--contrast-1200))
    );
    --step-text--selected: var(
        --dock-item-text-color--selected,
        var(--mdc-theme-on-primary)
    );
    --step-text--passed: var(
        --dock-item-text-color--passed,
        var(--step-text--selected)
    );

    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.step {
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    height: var(--step-height);
    border: none;
    border-radius: functions.pxToRem(4);
    font-size: functions.pxToRem(14);
    margin-bottom: functions.pxToRem(6);

    &:focus {
        outline: none;
    }

    &:focus-visible {
        box-shadow: var(--shadow-depth-8-focused);
    }

    .dock-item:not(.selected) & {
        &:not(.disabled) {
            cursor: pointer;
            &:hover {
                box-shadow: var(--button-shadow-normal);
            }
            &:active {
                box-shadow: var(--button-shadow-pressed);
            }
        }
    }

    .dynamic-dock-item & {
        padding: 0 functions.pxToRem(12);

        .icon {
            margin-left: 0;
        }
    }
}

.text {
    @include mixins.truncate-text();
    max-width: var(--max-text-width);
}

.icon {
    margin: 0 functions.pxToRem(8) 0 functions.pxToRem(4);
}

@import './partial-styles/_selected-indicator';
@import './partial-styles/_colors';
