const e=window.LimeElements.h;class l{constructor(){this.props={label:"My button",primary:!0,outlined:!1,icon:null,disabled:!1,loading:!1}}render(){return[e("limel-button",Object.assign({},this.props)),this.renderControls()]}renderControls(){return[{property:"label",label:"Label",value:"My button"},{property:"primary",label:"Primary",value:!0},{property:"outlined",label:"Outlined",value:!0},{property:"icon",label:"Icon",value:"filled_message"},{property:"disabled",label:"Disabled",value:!0},{property:"loading",label:"Loading",value:!0}].map(l=>e("limel-switch",{label:l.label,value:!!this.props[l.property],onChange:e=>{this.props=Object.assign({},this.props,{[l.property]:e.detail&&l.value||null})}}))}static get is(){return"limel-example-button"}static get encapsulation(){return"shadow"}static get properties(){return{props:{state:!0}}}static get style(){return"limel-switch.sc-limel-example-button{margin-right:1.5rem}limel-button.sc-limel-example-button{display:block;margin-bottom:2rem}"}}export{l as LimelExampleButton};