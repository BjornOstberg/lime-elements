import{r as t,h as i}from"./core-5f6fd4ec.js";import{E as e,a as s}from"./keycodes-ab559a88.js";const h=class{constructor(i){t(this,i),this.textValue="",this.required=!1,this.readonly=!1,this.disabled=!1,this.maxItems=0,this.emptyInputOnBlur=!0,this.value=[this.createChip("Elephant"),this.createChip("Caterpillar"),this.createChip("Badger"),this.createChip("Fish")],this.value[0].iconColor="var(--lime-red)",this.value[1].iconColor="var(--lime-orange)",this.value[2].iconColor="var(--lime-green)",this.value[3].iconColor="var(--lime-blue)",this.chipSetOnChange=this.chipSetOnChange.bind(this),this.onInteract=this.onInteract.bind(this),this.onInput=this.onInput.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.setDisabled=this.setDisabled.bind(this),this.setReadonly=this.setReadonly.bind(this),this.setRequired=this.setRequired.bind(this),this.setEmptyInputOnBlur=this.setEmptyInputOnBlur.bind(this),this.setMaxItems=this.setMaxItems.bind(this)}render(){return[i("limel-flex-container",{align:"end"},i("limel-chip-set",{label:"Animal",type:"input",value:this.value,required:this.required,readonly:this.readonly,disabled:this.disabled,maxItems:this.maxItems,onChange:this.chipSetOnChange,onInput:this.onInput,onInteract:this.onInteract,onKeyUp:this.onKeyUp,searchLabel:"Add an animal",emptyInputOnBlur:this.emptyInputOnBlur}),i("limel-input-field",{label:"Max items",value:this.maxItems.toString(),type:"number",onChange:this.setMaxItems})),i("p",null,i("limel-flex-container",{justify:"end"},i("limel-checkbox",{label:"Empty input on blur",onChange:this.setEmptyInputOnBlur,checked:this.emptyInputOnBlur}),i("limel-checkbox",{label:"Disabled",onChange:this.setDisabled,checked:this.disabled}),i("limel-checkbox",{label:"Readonly",onChange:this.setReadonly,checked:this.readonly}),i("limel-checkbox",{label:"Required",onChange:this.setRequired,checked:this.required}))),i("p",null,"Value: ",i("code",null,JSON.stringify(this.value)))]}onInput(t){this.textValue=t.detail}onKeyUp(t){t.key!==e&&t.keyCode!==s||!this.textValue.trim()||(this.value=[...this.value,this.createChip(this.textValue.trim())],this.textValue="")}chipSetOnChange(t){console.log(t.detail),this.value=t.detail}onInteract(t){console.log("Chip interacted with: ",t.detail)}createChip(t){return{id:t,text:t,removable:!0,icon:`${t}`.toLowerCase()}}setDisabled(t){this.disabled=t.detail}setReadonly(t){this.readonly=t.detail}setRequired(t){this.required=t.detail}setEmptyInputOnBlur(t){this.emptyInputOnBlur=t.detail}setMaxItems(t){this.maxItems=+t.detail}static get style(){return"limel-chip-set[type=input]{--icon-background-color:#adadad;--icon-color:#fff;-ms-flex-positive:1;flex-grow:1;-ms-flex-negative:0;flex-shrink:0}limel-input-field{-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;margin-left:1rem;width:6rem}"}};export{h as limel_example_chip_set_input};