{"version":3,"sources":["/Users/ads/src/lime-elements/src/components/icon/icon.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","name","path","isMDXComponent"],"mappings":"mXAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,QADR,QAGA,mHAAkG,+BAAGC,WAAW,KAAQ,CACpH,KAAQ,qCADsF,oCAAlG,wJAGA,+IAA8H,0BAAYA,WAAW,KAAvB,QAA9H,cACA,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIA,WAAW,MAAf,UAA+B,sBAAQA,WAAW,MAAnB,yBAA/B,SAAmG,0BAAYA,WAAW,MAAvB,WAAnG,gBAAwK,sBAAQA,WAAW,MAAnB,yBAAxK,6CACA,kBAAIA,WAAW,MAAf,qGAA0H,0BAAYA,WAAW,MAAvB,qCAE5H,2BAAU,0BAAYA,WAAW,KAAvB,UAAV,wGAAqK,0BAAYA,WAAW,KAAvB,mCAArK,KACA,2BAAU,0BAAYA,WAAW,KAAvB,UAAV,wGAAqK,0BAAYA,WAAW,KAAvB,QAArK,aACA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,qCAEL,yDAAwC,0BAAYA,WAAW,KAAvB,QAAxC,gGAAyL,0BAAYA,WAAW,KAAvB,gBAAzL,aACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+DAIL,2BAAaC,KAAK,eAClB,iBAAQ,CACN,GAAM,WADR,WAGA,6BAAeA,KAAK,uBACpB,iBAAQ,CACN,GAAM,iCADR,iCAGA,6BAAeA,KAAK,gCAAgCC,KAAK,U,kLAK7DN,EAAWO,gBAAiB","file":"static/js/src-components-icon-icon.fc9a3718.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"icon\"\n    }}>{`Icon`}</h1>\n    <p>{`The recommended icon library for use with Lime Elements is the Windows 10 set from Icons8 (`}<a parentName=\"p\" {...{\n        \"href\": \"https://icons8.com/icons/windows\"\n      }}>{`https://icons8.com/icons/windows`}</a>{`). This set is included in the relevant Lime products. If you are using Lime Elements in a non-Lime product, you will have to supply your own icons.`}</p>\n    <p>{`The size and color of the icon is set in CSS, however there are a few standard sizes defined that can be used with the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` property.`}</p>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`To use `}<strong parentName=\"li\">{`@limetech/lime-icons8`}</strong>{`, the `}<inlineCode parentName=\"li\">{`/assets`}</inlineCode>{` folder from `}<strong parentName=\"li\">{`@limetech/lime-icons8`}</strong>{` must be made available on the webserver.`}</li>\n      <li parentName=\"ul\">{`To use a different icon set, the icons must be placed in a folder structure that looks like this: `}<inlineCode parentName=\"li\">{`assets/icons/<name-of-icon>.svg`}</inlineCode></li>\n    </ul>\n    <p>{`If `}<inlineCode parentName=\"p\">{`assets`}</inlineCode>{` is placed in the root, no other setup is needed. The icons will be fetched with a relative URL from `}<inlineCode parentName=\"p\">{`assets/icons/<name-of-icon>.svg`}</inlineCode>{`.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`assets`}</inlineCode>{` is placed in a sub-folder somewhere, the easiest way to make the icons available is to use the HTML `}<inlineCode parentName=\"p\">{`base`}</inlineCode>{` element:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<base href=\"/my/parent/path/\">\n`}</code></pre>\n    <p>{`If this is not enough, or if the `}<inlineCode parentName=\"p\">{`base`}</inlineCode>{` element is already in use for something else, a global icon path can be configured with the `}<inlineCode parentName=\"p\">{`limel-config`}</inlineCode>{` element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<limel-config config={{iconPath: '/my/parent/path/'}} />\n`}</code></pre>\n    <limel-props name=\"limel-icon\" />\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <limel-example name=\"limel-example-icon\" /> \n    <h2 {...{\n      \"id\": \"example-with-background-color\"\n    }}>{`Example with background color`}</h2>\n    <limel-example name=\"limel-example-icon-background\" path=\"icon\" /> \n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}