{"version":3,"sources":["/Users/ads/src/lime-elements/src/contributing.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","__codesandbox","primary","label","name","isMDXComponent"],"mappings":"wZAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gJAEA,iBAAQ,CACN,GAAM,iCADR,iCAGA,uEAAsD,0BAAYC,WAAW,KAAvB,QAAtD,iCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+IAYL,iBAAQ,CACN,GAAM,sBADR,sBAGA,iEACA,sBACE,kBAAIA,WAAW,MAAf,sBAA2C,0BAAYA,WAAW,MAAvB,cAA3C,cACA,kBAAIA,WAAW,MAAf,oBAAyC,0BAAYA,WAAW,MAAvB,iBAAzC,aAEF,iBAAQ,CACN,GAAM,kCADR,kCAGA,qCAAoB,0BAAYA,WAAW,KAAvB,cAApB,4DAAuI,0BAAYA,WAAW,KAAvB,QAAvI,8BAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oMAgBL,4DACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6CAAgDC,QAAS,CAC1FL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,gBACCC,cAAa,i4CAAo4CP,QAAQ,cAC55C,4BAAcQ,SAAO,EAACC,MAAM,eAE5B,iBAAQ,CACN,GAAM,mCADR,mCAGA,qCAAoB,0BAAYR,WAAW,KAAvB,iBAApB,6FAEA,2CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8HAYL,4DACA,6BAAeS,KAAK,yBACpB,uFAAsE,0BAAYT,WAAW,KAAvB,wBAAtE,qE,0KAMJJ,EAAWc,gBAAiB","file":"static/js/src-contributing.121b0143.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"lime-elements\"\n    }}>{`Lime Elements`}</h1>\n    <p>{`This is the documentation for Lime Elements. Documentation is generated by Docz and\nis written in MDX (Markdown + JSX)`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-new-page-in-the-docs\"\n    }}>{`Adding a new page in the docs`}</h2>\n    <p>{`A new page can be added just by creating a new `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{` file anywhere in the project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nname: Hello world\nroute: /hello-world\nmenu: Components\n---\n\n# Hello world\n\nI'm a markdown document that can have components!\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"include-an-example\"\n    }}>{`Include an example`}</h2>\n    <p>{`There are two ways to include an example`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Using the built in `}<inlineCode parentName=\"li\">{`Playground`}</inlineCode>{` component`}</li>\n      <li parentName=\"ul\">{`Using the custom `}<inlineCode parentName=\"li\">{`limel-example`}</inlineCode>{` element`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"using-the-playground-component\"\n    }}>{`Using the Playground component`}</h3>\n    <p>{`By using the `}<inlineCode parentName=\"p\">{`Playground`}</inlineCode>{` component, the example can be written inline inside the `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{`\nfile. The following file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nname: Hello world\n---\n\nimport { Playground } from 'docz'\n\n# Hello world\n\nThis is my example file\n\n<Playground>\n    <limel-button primary label=\"My button\" />\n</Playground>\n`}</code></pre>\n    <p>{`will generate the following example`}</p>\n    <Playground __position={0} __code={'<limel-button primary label=\\\"My button\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtDUzXQ2V5TNdowVQXQUWOU4sOcAhEixdhuHYYB1iiARnlQK52gABnYJMZiwdo92rGYOxYGduIAFkE9gADZBOE9YwGAgAxb1oESbj-GcQ4EQdTAYKEfgliIahKDgMSESU6sVJoZwICwy52AARikkT5HIyipgAQTmJj2AjKDyBsKB0DDVCOSYsRAujGR2BRBiYG4YBsLopK4HkLca2AELoHC4IADJCvGRJ5koZo8rCiLuFquUwGQyUBlQdp2AAfg2fKwwjKKriqgrUE86spBkKs3zMGF1WOGAwDCKAph66LYuGvzl2rBNA0lHBVMyFIrwIbKa1rKB-Xnc0PHCCJzH7flXAEZI4MCKA-BAPVkgum5qH4dhNxXKRNoIbbdv27KpFWsazC_EArO2Vw0n_OBqEA3QQIMMDWOrfhUG9RkkHYfgfmLaoMnNH8yVxkSLH4VgMnyL68f4HicCZniTPWfhynIfoZm7f0GZAHyErw2BoSwb1yemslKESXM8gKCdNXNQm_lLNnMZAKI0H4K5-FUbAEbVqmQEweZwwoiB4G1liVw5mirf4FycCTHAACZDZrfhTUle2QDg2gUXdo2vYtK0fb9-BRBAdYhvkKGie8D5qEgFIEaR7QUf0BhWJAWgfSybWCdNWhzWD81ZhmfhY_kaugA`} mdxType=\"Playground\">\n    <limel-button primary label=\"My button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"using-the-limel-example-element\"\n    }}>{`Using the limel-example element`}</h3>\n    <p>{`By using the `}<inlineCode parentName=\"p\">{`limel-example`}</inlineCode>{` element, examples can be written in their own example\nfiles and referenced in the docs.`}</p>\n    <p>{`The following file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nname: Hello world\n---\n\n# Hello world\n\nThis is my example file\n\n<limel-example name=\"limel-example-button\"/>\n`}</code></pre>\n    <p>{`will generate the following example`}</p>\n    <limel-example name=\"limel-example-button\" />\n    <p>{`At the moment, for this to work the examples must be placed in `}<inlineCode parentName=\"p\">{`/src/examples/<type>`}</inlineCode>{` and\nfollow the same naming convention as the existing examples`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}