(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/components/grid/grid.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return l});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),i={},r="wrapper";function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(r,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"grid"},"Grid"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"limel-grid")," component creates a grid which can be used to control the layout of other components. It uses CSS ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas"}),"grid-template-areas")," to enable easy configuration of its child-elements."),Object(o.b)("limel-props",{name:"limel-grid"}),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("limel-example",{name:"limel-example-grid"}),Object(o.b)("h2",{id:"example-explanation"},"Example explanation"),Object(o.b)("p",null,"We use the ",Object(o.b)("inlineCode",{parentName:"p"},"grid-area"),' property to give each component a unique name, and then use this name to "draw" our grid layout.'),Object(o.b)("p",null,"You can name each component anything you want, like ",Object(o.b)("inlineCode",{parentName:"p"},"salespipe"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"infotile-active-support-tickets"),', but keeping the names to a fixed number of characters makes the "drawing" of the grid look more like the actual grid. One to three characters is probably a good number for most cases.'),Object(o.b)("p",null,'Any "name" that doesn\'t match a named element will create empty cells. In our case, we use a dot (',Object(o.b)("inlineCode",{parentName:"p"},"."),") to mark empty cells. Empty cells can be put anywhere in the grid, not just at the end."),Object(o.b)("p",null,"Note that we can add some extra spaces after the dot marking an empty cell, in order to align the next cell in our config-string. This can also be used if your elements have named of differing lengths. The extra whitespace is ignored when the CSS is parsed."),Object(o.b)("p",null,"If the name of an element does not appear in the grid-configuration, it will not be displayed at all. This might be useful if you wish to show a specific component only under certain circumstances, like if the viewport is large enough to accomodate it."))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/grid/grid.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=src-components-grid-grid.6817608b16edcc3973d4.js.map