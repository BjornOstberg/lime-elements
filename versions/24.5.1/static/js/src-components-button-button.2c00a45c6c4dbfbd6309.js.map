{"version":3,"sources":["/Users/ads/src/lime-elements/src/components/button/button.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","name","parentName","path","isMDXComponent"],"mappings":"sXAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,UADR,UAGA,2BAAaC,KAAK,iBAClB,iBAAQ,CACN,GAAM,WADR,WAGA,6BAAeA,KAAK,yBACpB,iBAAQ,CACN,GAAM,sBADR,sBAGA,8EAA6D,0BAAYC,WAAW,KAAvB,WAA7D,QAAyH,0BAAYA,WAAW,KAAvB,YAAzH,OAAqL,0BAAYA,WAAW,KAAvB,QAArL,yBAA+P,0BAAYA,WAAW,KAAvB,WAA/P,yBACkB,0BAAYA,WAAW,KAAvB,SADlB,sEAEA,iCAAgB,0BAAYA,WAAW,KAAvB,WAAhB,2BAA+F,0BAAYA,WAAW,KAAvB,QAA/F,OAAuJ,0BAAYA,WAAW,KAAvB,SAAvJ,qIAEA,6BAAeD,KAAK,6BAA6BE,KAAK,Y,sLAK1DN,EAAWO,gBAAiB","file":"static/js/src-components-button-button.fc0c4eb6.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <limel-props name=\"limel-button\" />\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <limel-example name=\"limel-example-button\" />\n    <h3 {...{\n      \"id\": \"with-click-handler\"\n    }}>{`With click handler`}</h3>\n    <p>{`The click handler in this example sets the attributes `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`. After 1 second, the `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{`\nattribute is set to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` again. After another 4 seconds, the button is once again enabled.`}</p>\n    <p>{`When the `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{` attribute changes from `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`, the button automatically displays a checkmark icon for 2\nseconds. Note that our click handler isn't actually involved in this.`}</p>\n    <limel-example name=\"limel-example-button-click\" path=\"button\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}