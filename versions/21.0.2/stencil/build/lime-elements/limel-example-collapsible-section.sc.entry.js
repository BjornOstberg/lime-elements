const e=window.LimeElements.h;class l{constructor(){this.secondExampleIsOpen=!1,this.percentage=34,this.toggleSecondExample=this.toggleSecondExample.bind(this),this.secondExampleOnOpen=this.secondExampleOnOpen.bind(this),this.secondExampleOnClose=this.secondExampleOnClose.bind(this)}render(){return[e("section",null,e("h3",null,"Basic example"),e("limel-collapsible-section",{header:"This text becomes the header"},e("p",null,"This element becomes the body."))),e("hr",null),e("section",null,e("h3",null,"Closing and opening from outside the component"),e("limel-flex-container",{justify:"end"},e("limel-button",{label:"toggle",primary:!0,onClick:this.toggleSecondExample})),e("limel-collapsible-section",{header:"Click me or click the button",isOpen:this.secondExampleIsOpen,onOpen:this.secondExampleOnOpen,onClose:this.secondExampleOnClose},e("p",null,"Either way, the section will toggle!",e("limel-slider",{unit:"%",value:this.percentage}))))]}toggleSecondExample(){this.secondExampleIsOpen=!this.secondExampleIsOpen}secondExampleOnOpen(){console.log("Second example opened"),this.secondExampleIsOpen=!0}secondExampleOnClose(){console.log("Second example closed"),this.secondExampleIsOpen=!1}static get is(){return"limel-example-collapsible-section"}static get encapsulation(){return"shadow"}static get properties(){return{percentage:{state:!0},secondExampleIsOpen:{state:!0}}}}export{l as LimelExampleCollapsibleSection};