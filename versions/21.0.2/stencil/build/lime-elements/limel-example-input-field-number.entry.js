const e=window.LimeElements.h;class t{constructor(){this.required=!1,this.disabled=!1,this.invalid=!1,this.formatNumber=!0,this.changeHandler=this.changeHandler.bind(this),this.toggleFormatting=this.toggleFormatting.bind(this),this.toggleEnabled=this.toggleEnabled.bind(this),this.toggleRequired=this.toggleRequired.bind(this)}render(){return[e("limel-input-field",{label:"Number Field Label",value:this.value,type:"number",formatNumber:this.formatNumber,disabled:this.disabled,invalid:this.invalid,required:this.required,onChange:this.changeHandler}),e("p",null,e("limel-flex-container",{justify:"end"},e("limel-button",{label:this.formatNumber?"Unformat number":"Format number",onClick:this.toggleFormatting}),e("limel-button",{label:this.disabled?"Enable":"Disable",onClick:this.toggleEnabled}),e("limel-button",{label:this.required?"Set optional":"Set required",onClick:this.toggleRequired}))),e("p",null,"Value: ",this.value)]}checkValidity(){this.invalid=this.required&&!this.value}changeHandler(e){this.value=e.detail,this.checkValidity()}toggleFormatting(){this.formatNumber=!this.formatNumber}toggleEnabled(){this.disabled=!this.disabled}toggleRequired(){this.required=!this.required}static get is(){return"limel-example-input-field-number"}static get encapsulation(){return"shadow"}static get properties(){return{disabled:{state:!0},formatNumber:{state:!0},invalid:{state:!0},required:{state:!0,watchCallbacks:["checkValidity"]},value:{state:!0}}}static get style(){return"p{font-size:small}"}}export{t as LimelExampleInputFieldNumber};