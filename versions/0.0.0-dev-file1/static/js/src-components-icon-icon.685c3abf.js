(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./src/components/icon/icon.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;r(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"icon"}},"Icon"),o.a.createElement(m.MDXTag,{name:"p",components:n},"The icon library used in Lime Elements is the Windows 10 set from Icons8 (",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://icons8.com/windows-icons/"}},"https://icons8.com/windows-icons/"),")."),o.a.createElement(m.MDXTag,{name:"p",components:n},"The size and color of the icon is set in CSS, however there are a few standard sizes defined that can be used with the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"size")," property."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"setup"}},"Setup"),o.a.createElement(m.MDXTag,{name:"p",components:n},"The ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dist/collection/assets")," folder from Lime Elements must be made available on the webserver. If it is placed in the root, no other setup is needed. The icons will be fetched with a relative URL from ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"assets/icons/<name-of-icon>.svg"),"."),o.a.createElement(m.MDXTag,{name:"p",components:n},"If they are placed in a sub folder somewhere, the easiest way to make them available is to use the HTML ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"base")," element:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'<base href="/my/parent/path/">\n')),o.a.createElement(m.MDXTag,{name:"p",components:n},"If this is not enough, or if the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"base")," element is already in use for something else, a global icon path can be configured with the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"limel-config")," element:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<limel-config config={{iconPath: '/my/parent/path/'}} />\n")),o.a.createElement("limel-props",{name:"limel-icon"}),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),o.a.createElement("limel-example",{name:"limel-example-icon"})," ")}}}]);