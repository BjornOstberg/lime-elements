(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"./src/usage.mdx":function(e,t,n){"use strict";n.r(t);var a=n("./node_modules/react/index.js"),o=n.n(a),r=n("./node_modules/@mdx-js/tag/dist/index.js");function m(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}t.default=function(e){var t=e.components;m(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:t},o.a.createElement(r.MDXTag,{name:"h1",components:t,props:{id:"how-to-use-lime-elements"}},"How to use lime-elements"),o.a.createElement(r.MDXTag,{name:"p",components:t},"Generally speaking, the examples of the lime-elements components are meant to show off their key features\nand make it easy to use them in other projects. Unfortunately you have to pay attention to some details."),o.a.createElement(r.MDXTag,{name:"h2",components:t,props:{id:"import-statements"}},"Import statements"),o.a.createElement(r.MDXTag,{name:"p",components:t},"Some components use interfaces which are referred to in the examples with a relative path like this: "),o.a.createElement(r.MDXTag,{name:"pre",components:t},o.a.createElement(r.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-ts",metaString:""}},"import { Option } from '../../interface';\n")),o.a.createElement(r.MDXTag,{name:"p",components:t},"When using those interfaces in your own project, the import path changes to: "),o.a.createElement(r.MDXTag,{name:"pre",components:t},o.a.createElement(r.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-ts",metaString:""}},"import { Option } from 'lime-elements';\n")))}}}]);