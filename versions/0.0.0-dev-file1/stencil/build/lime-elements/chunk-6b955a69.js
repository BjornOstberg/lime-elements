import{a as e,b as t}from"./chunk-ae7a155e.js";import{a as s}from"./chunk-3e945de3.js";const i={ROOT:"mdc-list",LIST_ITEM_CLASS:"mdc-list-item",LIST_ITEM_SELECTED_CLASS:"mdc-list-item--selected",LIST_ITEM_ACTIVATED_CLASS:"mdc-list-item--activated"},n={ARIA_ORIENTATION:"aria-orientation",ARIA_ORIENTATION_HORIZONTAL:"horizontal",ARIA_SELECTED:"aria-selected",ARIA_CHECKED:"aria-checked",ARIA_CHECKED_RADIO_SELECTOR:'[role="radio"][aria-checked="true"]',ARIA_ROLE_CHECKBOX_SELECTOR:'[role="checkbox"]',ARIA_CHECKED_CHECKBOX_SELECTOR:'[role="checkbox"][aria-checked="true"]',RADIO_SELECTOR:'input[type="radio"]:not(:disabled)',CHECKBOX_SELECTOR:'input[type="checkbox"]:not(:disabled)',CHECKBOX_RADIO_SELECTOR:'input[type="checkbox"]:not(:disabled), input[type="radio"]:not(:disabled)',CHILD_ELEMENTS_TO_TOGGLE_TABINDEX:`.${i.LIST_ITEM_CLASS} button:not(:disabled),\n  .${i.LIST_ITEM_CLASS} a`,FOCUSABLE_CHILD_ELEMENTS:`.${i.LIST_ITEM_CLASS} button:not(:disabled), .${i.LIST_ITEM_CLASS} a,\n  .${i.LIST_ITEM_CLASS} input[type="radio"]:not(:disabled),\n  .${i.LIST_ITEM_CLASS} input[type="checkbox"]:not(:disabled)`,ENABLED_ITEMS_SELECTOR:".mdc-list-item:not(.mdc-list-item--disabled)"},d=["input","button","textarea","select"];class o extends e{static get strings(){return n}static get cssClasses(){return i}static get defaultAdapter(){return{getListItemCount:()=>{},getFocusedElementIndex:()=>{},setAttributeForElementIndex:()=>{},removeAttributeForElementIndex:()=>{},addClassForElementIndex:()=>{},removeClassForElementIndex:()=>{},focusItemAtIndex:()=>{},setTabIndexForListItemChildren:()=>{},followHref:()=>{},hasRadioAtIndex:()=>{},hasCheckboxAtIndex:()=>{},isCheckboxCheckedAtIndex:()=>{},setCheckedCheckboxOrRadioAtIndex:()=>{},isFocusInsideList:()=>{}}}constructor(e){super(Object.assign(o.defaultAdapter,e)),this.wrapFocus_=!1,this.isVertical_=!0,this.isSingleSelectionList_=!1,this.selectedIndex_=-1,this.focusedItemIndex_=-1,this.useActivatedClass_=!1,this.isCheckboxList_=!1,this.isRadioList_=!1}layout(){0!==this.adapter_.getListItemCount()&&(this.adapter_.hasCheckboxAtIndex(0)?this.isCheckboxList_=!0:this.adapter_.hasRadioAtIndex(0)&&(this.isRadioList_=!0))}setWrapFocus(e){this.wrapFocus_=e}setVerticalOrientation(e){this.isVertical_=e}setSingleSelection(e){this.isSingleSelectionList_=e}setUseActivatedClass(e){this.useActivatedClass_=e}getSelectedIndex(){return this.selectedIndex_}setSelectedIndex(e){this.isIndexValid_(e)&&(this.isCheckboxList_?this.setCheckboxAtIndex_(e):this.isRadioList_?this.setRadioAtIndex_(e):this.setSingleSelectionAtIndex_(e))}handleFocusIn(e,t){t>=0&&this.adapter_.setTabIndexForListItemChildren(t,0)}handleFocusOut(e,t){t>=0&&this.adapter_.setTabIndexForListItemChildren(t,-1),setTimeout(()=>{this.adapter_.isFocusInsideList()||this.setTabindexToFirstSelectedItem_()},0)}handleKeydown(e,t,s){const i="ArrowLeft"===e.key||37===e.keyCode,n="ArrowUp"===e.key||38===e.keyCode,d="ArrowRight"===e.key||39===e.keyCode,o="ArrowDown"===e.key||40===e.keyCode,a="Home"===e.key||36===e.keyCode,l="End"===e.key||35===e.keyCode,r="Enter"===e.key||13===e.keyCode,c="Space"===e.key||32===e.keyCode;let h=this.adapter_.getFocusedElementIndex(),_=-1;-1===h&&(h=s)<0||(this.isVertical_&&o||!this.isVertical_&&d?(this.preventDefaultEvent_(e),_=this.focusNextElement(h)):this.isVertical_&&n||!this.isVertical_&&i?(this.preventDefaultEvent_(e),_=this.focusPrevElement(h)):a?(this.preventDefaultEvent_(e),_=this.focusFirstElement()):l?(this.preventDefaultEvent_(e),_=this.focusLastElement()):(r||c)&&t&&(this.isSelectableList_()&&(this.setSelectedIndexOnAction_(h),this.preventDefaultEvent_(e)),this.adapter_.followHref(h)),this.focusedItemIndex_=h,_>=0&&(this.setTabindexAtIndex_(_),this.focusedItemIndex_=_))}handleClick(e,t){-1!==e&&(this.isSelectableList_()&&this.setSelectedIndexOnAction_(e,t),this.setTabindexAtIndex_(e),this.focusedItemIndex_=e)}preventDefaultEvent_(e){const t=`${e.target.tagName}`.toLowerCase();-1===d.indexOf(t)&&e.preventDefault()}focusNextElement(e){let t=e+1;if(t>=this.adapter_.getListItemCount()){if(!this.wrapFocus_)return e;t=0}return this.adapter_.focusItemAtIndex(t),t}focusPrevElement(e){let t=e-1;if(t<0){if(!this.wrapFocus_)return e;t=this.adapter_.getListItemCount()-1}return this.adapter_.focusItemAtIndex(t),t}focusFirstElement(){return this.adapter_.focusItemAtIndex(0),0}focusLastElement(){const e=this.adapter_.getListItemCount()-1;return this.adapter_.focusItemAtIndex(e),e}setSingleSelectionAtIndex_(e){let t=i.LIST_ITEM_SELECTED_CLASS;this.useActivatedClass_&&(t=i.LIST_ITEM_ACTIVATED_CLASS),this.selectedIndex_>=0&&this.selectedIndex_!==e&&(this.adapter_.removeClassForElementIndex(this.selectedIndex_,t),this.adapter_.setAttributeForElementIndex(this.selectedIndex_,n.ARIA_SELECTED,"false")),this.adapter_.addClassForElementIndex(e,t),this.adapter_.setAttributeForElementIndex(e,n.ARIA_SELECTED,"true"),this.selectedIndex_=e}setRadioAtIndex_(e){this.adapter_.setCheckedCheckboxOrRadioAtIndex(e,!0),this.selectedIndex_>=0&&this.adapter_.setAttributeForElementIndex(this.selectedIndex_,n.ARIA_CHECKED,"false"),this.adapter_.setAttributeForElementIndex(e,n.ARIA_CHECKED,"true"),this.selectedIndex_=e}setCheckboxAtIndex_(e){for(let t=0;t<this.adapter_.getListItemCount();t++){let s=!1;e.indexOf(t)>=0&&(s=!0),this.adapter_.setCheckedCheckboxOrRadioAtIndex(t,s),this.adapter_.setAttributeForElementIndex(t,n.ARIA_CHECKED,s?"true":"false")}this.selectedIndex_=e}setTabindexAtIndex_(e){-1===this.focusedItemIndex_&&0!==e?this.adapter_.setAttributeForElementIndex(0,"tabindex",-1):this.focusedItemIndex_>=0&&this.focusedItemIndex_!==e&&this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_,"tabindex",-1),this.adapter_.setAttributeForElementIndex(e,"tabindex",0)}isSelectableList_(){return this.isSingleSelectionList_||this.isCheckboxList_||this.isRadioList_}setTabindexToFirstSelectedItem_(){let e=0;this.isSelectableList_()&&("number"==typeof this.selectedIndex_&&-1!==this.selectedIndex_?e=this.selectedIndex_:this.selectedIndex_ instanceof Array&&this.selectedIndex_.length>0&&(e=this.selectedIndex_.reduce((e,t)=>Math.min(e,t)))),this.setTabindexAtIndex_(e)}isIndexValid_(e){if(e instanceof Array){if(!this.isCheckboxList_)throw new Error("MDCListFoundation: Array of index is only supported for checkbox based list");return 0===e.length||e.some(e=>this.isIndexInRange_(e))}if("number"==typeof e){if(this.isCheckboxList_)throw new Error("MDCListFoundation: Expected array of index for checkbox based list but got number: "+e);return this.isIndexInRange_(e)}return!1}isIndexInRange_(e){const t=this.adapter_.getListItemCount();return e>=0&&e<t}setSelectedIndexOnAction_(e,t=!0){this.isCheckboxList_?this.toggleCheckboxAtIndex_(e,t):this.setSelectedIndex(e)}toggleCheckboxAtIndex_(e,t){let s=this.adapter_.isCheckboxCheckedAtIndex(e);t&&this.adapter_.setCheckedCheckboxOrRadioAtIndex(e,s=!s),this.adapter_.setAttributeForElementIndex(e,n.ARIA_CHECKED,s?"true":"false"),-1===this.selectedIndex_&&(this.selectedIndex_=[]),s?this.selectedIndex_.push(e):this.selectedIndex_=this.selectedIndex_.filter(t=>t!==e)}}class a extends t{constructor(...e){super(...e)}static attachTo(e){return new a(e)}destroy(){this.root_.removeEventListener("keydown",this.handleKeydown_),this.root_.removeEventListener("click",this.handleClick_),this.root_.removeEventListener("focusin",this.focusInEventListener_),this.root_.removeEventListener("focusout",this.focusOutEventListener_)}initialSyncWithDOM(){this.handleClick_=this.handleClickEvent_.bind(this),this.handleKeydown_=this.handleKeydownEvent_.bind(this),this.focusInEventListener_=this.handleFocusInEvent_.bind(this),this.focusOutEventListener_=this.handleFocusOutEvent_.bind(this),this.root_.addEventListener("keydown",this.handleKeydown_),this.root_.addEventListener("focusin",this.focusInEventListener_),this.root_.addEventListener("focusout",this.focusOutEventListener_),this.root_.addEventListener("click",this.handleClick_),this.layout(),this.initializeListType()}layout(){const e=this.root_.getAttribute(n.ARIA_ORIENTATION);this.vertical=e!==n.ARIA_ORIENTATION_HORIZONTAL,[].slice.call(this.root_.querySelectorAll(".mdc-list-item:not([tabindex])")).forEach(e=>{e.setAttribute("tabindex",-1)}),[].slice.call(this.root_.querySelectorAll(n.FOCUSABLE_CHILD_ELEMENTS)).forEach(e=>e.setAttribute("tabindex",-1)),this.foundation_.layout()}getListItemIndex_(e){let t=e.target,s=-1;for(;!t.classList.contains(i.LIST_ITEM_CLASS)&&!t.classList.contains(i.ROOT);)t=t.parentElement;return t.classList.contains(i.LIST_ITEM_CLASS)&&(s=this.listElements.indexOf(t)),s}handleFocusInEvent_(e){const t=this.getListItemIndex_(e);this.foundation_.handleFocusIn(e,t)}handleFocusOutEvent_(e){const t=this.getListItemIndex_(e);this.foundation_.handleFocusOut(e,t)}handleKeydownEvent_(e){const t=this.getListItemIndex_(e);t>=0&&this.foundation_.handleKeydown(e,e.target.classList.contains(i.LIST_ITEM_CLASS),t)}handleClickEvent_(e){const t=this.getListItemIndex_(e),i=!s(e.target,n.CHECKBOX_RADIO_SELECTOR);this.foundation_.handleClick(t,i)}initializeListType(){const e=this.root_.querySelectorAll(n.ARIA_ROLE_CHECKBOX_SELECTOR),t=this.root_.querySelector(`.${i.LIST_ITEM_ACTIVATED_CLASS},\n        .${i.LIST_ITEM_SELECTED_CLASS}`),s=this.root_.querySelector(n.ARIA_CHECKED_RADIO_SELECTOR);if(e.length){const e=this.root_.querySelectorAll(n.ARIA_CHECKED_CHECKBOX_SELECTOR);this.selectedIndex=[].map.call(e,e=>this.listElements.indexOf(e))}else t?(t.classList.contains(i.LIST_ITEM_ACTIVATED_CLASS)&&this.foundation_.setUseActivatedClass(!0),this.singleSelection=!0,this.selectedIndex=this.listElements.indexOf(t)):s&&(this.selectedIndex=this.listElements.indexOf(s))}set vertical(e){this.foundation_.setVerticalOrientation(e)}get listElements(){return[].slice.call(this.root_.querySelectorAll(n.ENABLED_ITEMS_SELECTOR))}set wrapFocus(e){this.foundation_.setWrapFocus(e)}set singleSelection(e){this.foundation_.setSingleSelection(e)}get selectedIndex(){return this.foundation_.getSelectedIndex()}set selectedIndex(e){this.foundation_.setSelectedIndex(e)}getDefaultFoundation(){return new o(Object.assign({getListItemCount:()=>this.listElements.length,getFocusedElementIndex:()=>this.listElements.indexOf(document.activeElement),setAttributeForElementIndex:(e,t,s)=>{const i=this.listElements[e];i&&i.setAttribute(t,s)},removeAttributeForElementIndex:(e,t)=>{const s=this.listElements[e];s&&s.removeAttribute(t)},addClassForElementIndex:(e,t)=>{const s=this.listElements[e];s&&s.classList.add(t)},removeClassForElementIndex:(e,t)=>{const s=this.listElements[e];s&&s.classList.remove(t)},focusItemAtIndex:e=>{const t=this.listElements[e];t&&t.focus()},setTabIndexForListItemChildren:(e,t)=>{[].slice.call(this.listElements[e].querySelectorAll(n.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX)).forEach(e=>e.setAttribute("tabindex",t))},followHref:e=>{const t=this.listElements[e];t&&t.href&&t.click()},hasCheckboxAtIndex:e=>!!this.listElements[e].querySelector(n.CHECKBOX_SELECTOR),hasRadioAtIndex:e=>!!this.listElements[e].querySelector(n.RADIO_SELECTOR),isCheckboxCheckedAtIndex:e=>this.listElements[e].querySelector(n.CHECKBOX_SELECTOR).checked,setCheckedCheckboxOrRadioAtIndex:(e,t)=>{const s=this.listElements[e].querySelector(n.CHECKBOX_RADIO_SELECTOR);s.checked=t;const i=document.createEvent("Event");i.initEvent("change",!0,!0),s.dispatchEvent(i)},isFocusInsideList:()=>this.root_.contains(document.activeElement)}))}}export{a,o as b};